version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.0.0
jobs:
  frontend-build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{checksum "package.json"}}
            - v1-dependencies-
      - run:
          name: install dependencies Frontend
          command: |
            npm run frontend:install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{checksum "package.json"}}
      - run:
          name: Build Frontend
          command: |
            npm run frontend:build
  frontend-test:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - run:
          name: Front-End Install Karma Cli
          command: |
            npm run frontend:karmaCli
      - run:
          name: Front-End Tests
          command: |
            npm run frontend:test
      - run:
          name: Front-End End-to-end Testing
          command: |
            npm run frontend:e2e
    # docker:
    #   - image: "cimg/base:stable"
    # steps:
    #   - node/install
    #   - checkout
    #   - aws-cli/setup
    #   - run:
    #       name: Deploy Frontend
    #       command: |
    #         npm run frontend:deploy
  # frontend-deploy:
  backend-build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{checksum "package.json"}}
            - v1-dependencies-
      - run:
          name: install dependencies Backend
          command: |
            npm run backend:install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{checksum "package.json"}}
      - run:
          name: Build Backend
          command: |
            npm run backend:build

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - frontend-build
      - frontend-test:
          requires:
            - frontend-build
      # - frontend-deploy:
      #     requires:
      #       - backend-build
