version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.0.0
  browser-tools: circleci/browser-tools@1.2.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  frontend-build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{checksum "package.json"}}
            - v1-dependencies-
      - run:
          name: install dependencies Frontend
          command: |
            npm run frontend:install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{checksum "package.json"}}
      - run:
          name: Build Frontend
          command: |
            npm run frontend:build
  frontend-test:
    working_directory: ~/udagram-forntend
    docker:
      - image: circleci/node:10-browsers
    steps:
      - node/install
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - run:
          name: Front-End Install Karma Cli
          command: |
            npm run frontend:karmaCli
      - run:
          name: Front-End Tests
          command: |
            npm run frontend:test
      - run:
          name: Front-End End-to-end Testing
          command: |
            npm run frontend:e2e
  backend-build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{checksum "package.json"}}
            - v2-dependencies-
      - run:
          name: install dependencies Backend
          command: |
            npm run backend:install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{checksum "package.json"}}
      - run:
          name: Build Backend
          command: |
            npm run backend:build
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - aws-cli/setup
      - eb/setup
      - run:
          name: Deploy Frontend
          command: |
            npm run frontend:deploy
      - run:
          name: Deploy Front-End
          command: |
            npm run backend:deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - frontend-build
      - backend-build
      - frontend-test:
          requires:
            - frontend-build
      - deploy:
          requires:
            - frontend-test
